name: Build Linux Release

on:  
  push:
  workflow_dispatch:
  
jobs:
  collect_remote_commit:
    name: Read latest release branch commit
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.query_commit.outputs.sha }}
    steps:
      - name: Query latest commit on the release/v9.0.x branch
        id: query_commit
        run: |
          commit=$(curl -s -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/cosmos/gaia/branches/release/v9.0.x | jq -r '.commit.sha')
          echo "sha=$commit" >> "$GITHUB_OUTPUT"

  collect_latest_build:
    name: Read latest release from build repo
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.query_release.outputs.sha }}
    steps:
      - name: Query latest release
        id: query_release
        run: |
          release=$(curl -s -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/dasanchez/hello-gh-actions/releases | jq -r '.[0].name')
          echo sha=$release" >> $GITHUB_OUTPUT"

  # print_remote_commit:
  #   name: Print remote commit
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - collect_remote_commit
  #     - collect_latest_build
  #   steps:
  #     - name: Print output from previous job
  #       env:
  #         REMOTE_SHA: ${{needs.collect_remote_commit.outputs.sha}}
  #       run: |
  #         echo "$REMOTE_SHA"


  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [collect_remote_commit, collect_latest_build]
    if: needs.collect_remote_commit.outputs.sha != needs.collect_latest_build.outputs.sha
    permissions:
      contents: write
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Install tools
        run: |
          sudo apt-get install curl jq -y

      - name: Obtain last commit
        run: |
          LAST_COMMIT=$(curl -s -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/cosmos/gaia/branches/release/v9.0.x | jq -r '.commit.sha')
          echo $LAST_COMMIT > ~/.last_commit

      - name: Setup environment
        run: |
          sudo apt install build-essential wget -y

      - name: Install golang
        run: |
          wget https://go.dev/dl/go1.18.5.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go1.18.5.linux-amd64.tar.gz

      - name: Clone and build Gaia
        run: |
          export PATH=$PATH:/usr/local/go/bin
          git clone https://github.com/cosmos/gaia.git
          cd gaia
          git checkout release/v9.0.x
          make build
          cp build/gaiad ~/gaiad-linux
      
      - name: Print gaia version
        run: |
          ~/gaiad-linux-nightly version

      # Publish
      - name: Remove old releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 0
          delete_tag_pattern: "linux"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Add commit to release page
      #   env:
      #     REMOTE_SHA: ${{needs.collect_remote_commit.outputs.sha}}
      #   run: | 
      #     echo "Commit: $REMOTE_SHA" >> .github/workflows/linux-release-body.md

      - name: Add release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "~/gaiad-linux"
          name: ${{needs.collect_remote_commit.outputs.sha}}
          bodyFile: .github/workflows/linux-release-body.md
          prerelease: true
          replacesArtifacts: false
          allowUpdates: false
          tag: linux
          token: ${{ secrets.GITHUB_TOKEN }}
